// ============================================
// –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø SUPABASE –° –ü–†–ò–õ–û–ñ–ï–ù–ò–ï–ú –û–ö–û–®–ö–û
// ============================================

// –®–ê–ì 1: –î–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à index.html –ø–µ—Ä–µ–¥ </body>
// <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>

// –®–ê–ì 2: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞—á–∞–ª–æ –≤–∞—à–µ–≥–æ app.js –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥:

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø SUPABASE
// ============================================

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É Supabase
const SUPABASE_URL = 'http://localhost:8000';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
const { createClient } = window.supabase;
const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// ============================================
// –ó–ê–ú–ï–ù–ê –§–£–ù–ö–¶–ò–ô –†–ê–ë–û–¢–´ –° –î–ê–ù–ù–´–ú–ò
// ============================================

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let appState = {
    currentStep: 1,
    selectedService: null,
    selectedServiceName: null,
    selectedPrice: null,
    selectedDuration: null,
    selectedDate: null,
    selectedTime: null,
    services: [],
    currentMaster: null
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Supabase...');
    initMobileApp();
});

async function initMobileApp() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞—Å—Ç–µ—Ä–∞
    await loadMaster();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏ –∏–∑ Supabase
    await loadServicesFromSupabase();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    generateCalendar();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
    showStep(1);
}

// ============================================
// –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ò–ó SUPABASE
// ============================================

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Å—Ç–µ—Ä–µ
async function loadMaster() {
    try {
        const { data, error } = await supabase
            .from('masters')
            .select('*')
            .limit(1)
            .single();
        
        if (error) throw error;
        
        appState.currentMaster = data;
        console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω:', data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞—Å—Ç–µ—Ä–µ
        updateMasterInfo(data);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–∞:', error);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Å—Ç–µ—Ä–µ –≤ UI
function updateMasterInfo(master) {
    const masterNameElements = document.querySelectorAll('h3');
    masterNameElements.forEach(el => {
        if (el.textContent.includes('–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞')) {
            el.textContent = master.name;
        }
    });
    
    const descriptionElements = document.querySelectorAll('p.text-gray-600');
    descriptionElements.forEach(el => {
        if (el.textContent.includes('–ú–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞')) {
            el.textContent = master.description || '–ú–∞—Å—Ç–µ—Ä';
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å–ª—É–≥ –∏–∑ Supabase –≤–º–µ—Å—Ç–æ localStorage
async function loadServicesFromSupabase() {
    try {
        console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å–ª—É–≥ –∏–∑ Supabase...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
        const { data, error } = await supabase
            .from('services')
            .select('*')
            .eq('is_active', true)
            .order('is_popular', { ascending: false })
            .order('name');
        
        if (error) throw error;
        
        appState.services = data;
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.length} —É—Å–ª—É–≥`);
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —É—Å–ª—É–≥–∏
        renderServices();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å–ª—É–≥:', error);
        
        // –ï—Å–ª–∏ Supabase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
        loadDefaultServices();
    }
}

// –†–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
function loadDefaultServices() {
    console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ');
    appState.services = [
        {
            id: '1',
            name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä',
            description: '–ë–∞–∑–æ–≤—ã–π —É—Ö–æ–¥ –∑–∞ –Ω–æ–≥—Ç—è–º–∏',
            price: 1500,
            duration: 60,
            category: 'manicure',
            icon: 'fa-hand-sparkles',
            is_active: true,
            is_popular: false
        },
        {
            id: '2',
            name: '–ì–µ–ª—å-–ª–∞–∫',
            description: '–î–æ–ª–≥–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ',
            price: 2200,
            duration: 90,
            category: 'manicure',
            icon: 'fa-paint-brush',
            is_active: true,
            is_popular: true
        }
    ];
    renderServices();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ª—É–≥ –≤ UI
function renderServices() {
    const container = document.querySelector('#step-1 .space-y-3');
    
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É—Å–ª—É–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';
    
    if (appState.services.length === 0) {
        container.innerHTML = `
            <div class="text-center py-8 text-gray-500">
                <i class="fas fa-exclamation-circle text-4xl mb-3"></i>
                <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥</p>
            </div>
        `;
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏
    appState.services.forEach(service => {
        const serviceElement = document.createElement('div');
        serviceElement.className = 'service-option border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-purple-500 transition-all duration-200';
        serviceElement.dataset.serviceId = service.id;
        serviceElement.dataset.price = service.price;
        serviceElement.dataset.duration = service.duration;
        
        serviceElement.innerHTML = `
            <div class="flex justify-between items-center">
                <div>
                    <div class="font-semibold">
                        ${service.name}
                        ${service.is_popular ? '<span class="ml-2 px-2 py-1 bg-orange-100 text-orange-600 rounded text-xs">–ü–æ–ø—É–ª—è—Ä–Ω–∞—è</span>' : ''}
                    </div>
                    ${service.description ? `<div class="text-sm text-gray-500">${service.description}</div>` : ''}
                    <div class="text-sm text-gray-600">${service.duration} –º–∏–Ω—É—Ç</div>
                </div>
                <div class="text-purple-600 font-bold">${service.price}‚ÇΩ</div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        serviceElement.addEventListener('click', function() {
            selectService(service, this);
        });
        
        container.appendChild(serviceElement);
    });
}

// ============================================
// –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ò –í SUPABASE
// ============================================

// –í—ã–±–æ—Ä —É—Å–ª—É–≥–∏
function selectService(service, element) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö —É—Å–ª—É–≥
    document.querySelectorAll('.service-option').forEach(opt => {
        opt.classList.remove('selected');
    });
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É
    element.classList.add('selected');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
    appState.selectedService = service.id;
    appState.selectedServiceName = service.name;
    appState.selectedPrice = service.price;
    appState.selectedDuration = service.duration;
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    setTimeout(() => {
        showStep(2);
    }, 500);
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Supabase
async function confirmBooking() {
    const button = document.getElementById('confirm-booking');
    const loadingOverlay = document.getElementById('loading-overlay');
    
    if (!button) return;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>–ó–∞–ø–∏—Å—ã–≤–∞–µ–º...';
    
    if (loadingOverlay) {
        loadingOverlay.classList.remove('hidden');
    }
    
    try {
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏
        const bookingData = {
            master_id: appState.currentMaster.id,
            service_id: appState.selectedService,
            booking_date: formatDateForDB(appState.selectedDate),
            booking_time: appState.selectedTime + ':00',
            end_time: calculateEndTime(appState.selectedTime, appState.selectedDuration),
            status: 'confirmed',
            price: appState.selectedPrice,
            client_name: '–ö–ª–∏–µ–Ω—Ç –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            client_phone: '+7 (999) 123-45-67',
            notes: '–ó–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
        };
        
        console.log('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å:', bookingData);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase
        const { data, error } = await supabase
            .from('bookings')
            .insert(bookingData)
            .select();
        
        if (error) throw error;
        
        console.log('‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:', data);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
        setTimeout(() => {
            if (loadingOverlay) {
                loadingOverlay.classList.add('hidden');
            }
            showStep(4);
            updateSuccessMessage();
        }, 1500);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error);
        
        if (loadingOverlay) {
            loadingOverlay.classList.add('hidden');
        }
        
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ' + error.message);
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-check mr-2"></i>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è';
    }
}

// ============================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –ë–î
function formatDateForDB(day) {
    const today = new Date();
    const year = today.getFullYear();
    const month = (today.getMonth() + 1).toString().padStart(2, '0');
    const dayStr = day.toString().padStart(2, '0');
    return `${year}-${month}-${dayStr}`;
}

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
function calculateEndTime(startTime, duration) {
    const [hours, minutes] = startTime.split(':').map(Number);
    const totalMinutes = hours * 60 + minutes + duration;
    const endHours = Math.floor(totalMinutes / 60);
    const endMinutes = totalMinutes % 60;
    return `${endHours.toString().padStart(2, '0')}:${endMinutes.toString().padStart(2, '0')}:00`;
}

// ============================================
// –†–ï–ê–õ–¨–ù–û–ï –í–†–ï–ú–Ø (REALTIME)
// ============================================

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ª—É–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
function subscribeToServices() {
    console.log('üì° –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥...');
    
    const subscription = supabase
        .channel('services-changes')
        .on(
            'postgres_changes',
            {
                event: '*', // –°–ª—É—à–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è (INSERT, UPDATE, DELETE)
                schema: 'public',
                table: 'services'
            },
            (payload) => {
                console.log('üì® –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Å–ª—É–≥:', payload);
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏ –ø—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
                loadServicesFromSupabase();
            }
        )
        .subscribe();
    
    return subscription;
}

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏
function subscribeToBookings() {
    console.log('üì° –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏...');
    
    const subscription = supabase
        .channel('bookings-changes')
        .on(
            'postgres_changes',
            {
                event: 'INSERT',
                schema: 'public',
                table: 'bookings'
            },
            (payload) => {
                console.log('üì® –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:', payload.new);
                
                // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
                // showNotification('–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!');
            }
        )
        .subscribe();
    
    return subscription;
}

// –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
subscribeToServices();
subscribeToBookings();

// ============================================
// –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ò–ó –í–ê–®–ï–ì–û app.js
// –û—Å—Ç–∞–≤—å—Ç–µ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –µ—Å—Ç—å:
// - generateCalendar()
// - selectDate()
// - showTimeSlots()
// - selectTime()
// - showStep()
// - –∏ –¥—Ä—É–≥–∏–µ...
// ============================================

console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üìå –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω–∫—É: http://localhost:3000');
console.log('üìå API –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞: http://localhost:8000');

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
function generateCalendar() {
    const calendarGrid = document.getElementById('calendar-grid');
    const today = new Date();
    const currentMonth = today.getMonth();
    const currentYear = today.getFullYear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ—Å—è—Ü–∞
    const monthNames = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    
    const monthElement = document.getElementById('calendar-month');
    if (monthElement) {
        monthElement.textContent = `${monthNames[currentMonth]} ${currentYear}`;
    }
    
    if (!calendarGrid) return;
    
    // –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    const firstDay = new Date(currentYear, currentMonth, 1);
    const startDay = firstDay.getDay() === 0 ? 7 : firstDay.getDay(); // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ = 1
    
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
    calendarGrid.innerHTML = '';
    
    // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
    for (let i = 1; i < startDay; i++) {
        const emptyDay = document.createElement('div');
        emptyDay.className = 'calendar-day disabled';
        calendarGrid.appendChild(emptyDay);
    }
    
    // –î–Ω–∏ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= daysInMonth; day++) {
        const dayElement = document.createElement('div');
        dayElement.className = 'calendar-day';
        dayElement.textContent = day;
        
        const currentDate = new Date(currentYear, currentMonth, day);
        const dayOfWeek = currentDate.getDay();
        const isPast = day < today.getDate() && currentMonth === today.getMonth();
        const isToday = day === today.getDate() && currentMonth === today.getMonth();
        const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–Ω—è
        if (isPast || isWeekend) {
            dayElement.classList.add('disabled');
        } else if (day <= today.getDate() + 14) { // –î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ 2 –Ω–µ–¥–µ–ª–∏
            dayElement.classList.add('available');
            dayElement.addEventListener('click', function() {
                selectDate(day, currentDate);
            });
        } else {
            dayElement.classList.add('disabled');
        }
        
        if (isToday) {
            dayElement.classList.add('today');
        }
        
        calendarGrid.appendChild(dayElement);
    }
}

// –í—ã–±–æ—Ä –¥–∞—Ç—ã
function selectDate(day, date) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –¥–Ω–µ–π
    document.querySelectorAll('.calendar-day').forEach(d => {
        d.classList.remove('selected');
    });
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    event.target.classList.add('selected');
    
    appState.selectedDate = day;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
    showTimeSlots(day, date);
}

// –ü–æ–∫–∞–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
function showTimeSlots(day, date) {
    const timeSlotsContainer = document.getElementById('time-slots');
    const selectedDateSpan = document.getElementById('selected-date');
    const timeGrid = document.getElementById('time-grid');
    
    if (!timeSlotsContainer || !selectedDateSpan || !timeGrid) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const monthNames = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    selectedDateSpan.textContent = `${day} ${monthNames[date.getMonth()]}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã —Å —É—á–µ—Ç–æ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É—Å–ª—É–≥–∏
    const selectedServiceDuration = appState.selectedDuration || 60;
    const timeSlots = generateTimeSlots(selectedServiceDuration);
    
    // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–ª–æ—Ç—ã –¥–µ–ª–∞–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    const unavailableSlots = getUnavailableSlots(day);
    
    timeGrid.innerHTML = '';
    
    timeSlots.forEach(time => {
        const timeSlot = document.createElement('div');
        const isUnavailable = unavailableSlots.includes(time);
        
        timeSlot.className = `time-slot ${isUnavailable ? 'disabled' : 'available'}`;
        timeSlot.textContent = time;
        timeSlot.dataset.time = time;
        
        if (!isUnavailable) {
            timeSlot.addEventListener('click', function() {
                selectTime(time);
            });
        }
        
        timeGrid.appendChild(timeSlot);
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    timeSlotsContainer.classList.remove('hidden');
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–ª–æ—Ç–∞–º
    setTimeout(() => {
        timeSlotsContainer.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
        });
    }, 100);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É—Å–ª—É–≥–∏
function generateTimeSlots(duration) {
    const slots = [];
    const startHour = 10; // –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
    const endHour = 18; // –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
    const slotInterval = 30; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–ª–æ—Ç–∞–º–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
    
    for (let hour = startHour; hour < endHour; hour++) {
        for (let minute = 0; minute < 60; minute += slotInterval) {
            const endTime = hour * 60 + minute + duration;
            if (endTime <= endHour * 60) {
                const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
                slots.push(timeString);
            }
        }
    }
    
    return slots;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è –∑–∞–Ω—è—Ç–æ—Å—Ç–∏)
function getUnavailableSlots(day) {
    // –ü—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–Ω—è—Ç—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–Ω—è
    const seed = day * 13; // –ü—Ä–æ—Å—Ç–æ–µ seed –∑–Ω–∞—á–µ–Ω–∏–µ
    const unavailable = [];
    
    if (seed % 3 === 0) unavailable.push('11:00');
    if (seed % 4 === 1) unavailable.push('13:00');
    if (seed % 5 === 2) unavailable.push('17:00');
    if (seed % 7 === 3) unavailable.push('15:00');
    
    return unavailable;
}

// –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
function selectTime(time) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
    document.querySelectorAll('.time-slot').forEach(slot => {
        slot.classList.remove('selected');
    });
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–æ—Ç
    event.target.classList.add('selected');
    
    appState.selectedTime = time;
    
    // –î–æ–±–∞–≤–ª—è–µ–º haptic —ç—Ñ—Ñ–µ–∫—Ç
    event.target.classList.add('haptic-medium');
    setTimeout(() => {
        event.target.classList.remove('haptic-medium');
    }, 150);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
        showStep(3);
    }, 1000);
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
function showStep(stepNumber) {
    console.log(`üì± –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ ${stepNumber}`);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —à–∞–≥–∏
    document.querySelectorAll('.step-content').forEach(step => {
        step.classList.add('hidden');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —à–∞–≥
    const currentStepElement = document.getElementById(`step-${stepNumber}`);
    if (currentStepElement) {
        currentStepElement.classList.remove('hidden');
    }
    
    // –£–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    const backBtn = document.getElementById('back-btn');
    if (backBtn) {
        if (stepNumber === 1) {
            backBtn.classList.add('hidden');
        } else {
            backBtn.classList.remove('hidden');
        }
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (stepNumber === 3) {
        fillConfirmationData();
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    appState.currentStep = stepNumber;
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –Ω–∞–≤–µ—Ä—Ö
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥
function navigateBack() {
    if (appState.currentStep > 1) {
        showStep(appState.currentStep - 1);
    }
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function fillConfirmationData() {
    const serviceElement = document.getElementById('selected-service');
    const datetimeElement = document.getElementById('selected-datetime');
    const priceElement = document.getElementById('selected-price');
    
    if (serviceElement) {
        serviceElement.textContent = appState.selectedServiceName;
    }
    
    if (datetimeElement) {
        const monthNames = [
            '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
            '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
        ];
        const today = new Date();
        datetimeElement.textContent = 
            `${appState.selectedDate} ${monthNames[today.getMonth()]}, ${appState.selectedTime}`;
    }
    
    if (priceElement) {
        priceElement.textContent = `${appState.selectedPrice}‚ÇΩ`;
    }
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
function confirmBooking() {
    const button = document.getElementById('confirm-booking');
    const loadingOverlay = document.getElementById('loading-overlay');
    
    if (!button) return;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    button.innerHTML = '<div class="loading-spinner mr-2"></div>–ó–∞–ø–∏—Å—ã–≤–∞–µ–º...';
    button.disabled = true;
    
    if (loadingOverlay) {
        loadingOverlay.classList.remove('hidden');
    }
    
    // –°–∏–º—É–ª—è—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞
    setTimeout(() => {
        if (loadingOverlay) {
            loadingOverlay.classList.add('hidden');
        }
        showStep(4);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        incrementDemoCompletions();
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        button.innerHTML = '<i class="fas fa-check mr-2"></i>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è';
        button.disabled = false;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        updateSuccessMessage();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏
        saveBookingToHistory();
        
    }, 2500);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏
function saveBookingToHistory() {
    const booking = {
        id: Date.now(),
        service: appState.selectedServiceName,
        date: appState.selectedDate,
        time: appState.selectedTime,
        price: appState.selectedPrice,
        timestamp: new Date().toISOString()
    };
    
    let history = JSON.parse(localStorage.getItem('okoshko_bookings') || '[]');
    history.unshift(booking);
    
    // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞–ø–∏—Å–µ–π
    if (history.length > 50) {
        history = history.slice(0, 50);
    }
    
    localStorage.setItem('okoshko_bookings', JSON.stringify(history));
    console.log('üìù –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
function updateSuccessMessage() {
    const monthNames = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    const today = new Date();
    
    const message = `–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –∫ –º–∞—Å—Ç–µ—Ä—É –ê–Ω–Ω–µ –°–º–∏—Ä–Ω–æ–≤–æ–π –Ω–∞ ${appState.selectedDate} ${monthNames[today.getMonth()]} –≤ ${appState.selectedTime}`;
    const messageElement = document.getElementById('success-message');
    if (messageElement) {
        messageElement.textContent = message;
    }
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function restartApp() {
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    appState = {
        ...appState,
        currentStep: 1,
        selectedService: null,
        selectedServiceName: null,
        selectedPrice: null,
        selectedDuration: null,
        selectedDate: null,
        selectedTime: null
    };
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è
    document.querySelectorAll('.service-option').forEach(opt => {
        opt.classList.remove('selected');
    });
    
    document.querySelectorAll('.calendar-day').forEach(d => {
        d.classList.remove('selected');
    });
    
    document.querySelectorAll('.time-slot').forEach(slot => {
        slot.classList.remove('selected');
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
    const timeSlotsElement = document.getElementById('time-slots');
    if (timeSlotsElement) {
        timeSlotsElement.classList.add('hidden');
    }
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏ (–º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è)
    loadServicesFromStorage();
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É
    showStep(1);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    incrementDemoViews();
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ–º–æ
function updateDemoStats() {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    incrementDemoViews();
}

function incrementDemoViews() {
    const currentViews = parseInt(localStorage.getItem('mobile-demo-views') || '0');
    const newViews = currentViews + 1;
    localStorage.setItem('mobile-demo-views', newViews);
    
    console.log(`üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –¥–µ–º–æ: ${newViews}`);
}

function incrementDemoCompletions() {
    const currentCompletions = parseInt(localStorage.getItem('mobile-demo-completions') || '0');
    const newCompletions = currentCompletions + 1;
    localStorage.setItem('mobile-demo-completions', newCompletions);
    
    console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–π –º–æ–±–∏–ª—å–Ω–æ–≥–æ –¥–µ–º–æ: ${newCompletions}`);
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
const AppUtils = {
    // –°–∏–º—É–ª—è—Ü–∏—è —Ç–∞–∫—Ç–∏–ª—å–Ω–æ–π –æ—Ç–¥–∞—á–∏ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    hapticFeedback: function(type = 'light') {
        if ('vibrate' in navigator) {
            switch(type) {
                case 'light':
                    navigator.vibrate(10);
                    break;
                case 'medium':
                    navigator.vibrate(25);
                    break;
                case 'heavy':
                    navigator.vibrate(50);
                    break;
            }
        }
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    isMobile: function() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ iOS
    isIOS: function() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent);
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    getCurrentTime: function() {
        return new Date().toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø–∏—Å–µ–π
    getBookingHistory: function() {
        return JSON.parse(localStorage.getItem('okoshko_bookings') || '[]');
    },
    
    // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø–∏—Å–µ–π
    clearBookingHistory: function() {
        localStorage.removeItem('okoshko_bookings');
        console.log('üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø–∏—Å–µ–π –æ—á–∏—â–µ–Ω–∞');
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:', e.error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', function(e) {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', e.reason);
});

// PWA Support (–±–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞)
if ('serviceWorker' in navigator) {
    window.addEventListener('load', function() {
        console.log('üîß Service Worker –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –¥–µ–º–æ');
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.OkoshkoMobileApp = {
    appState,
    showStep,
    restartApp,
    AppUtils,
    loadServicesFromStorage,
    version: '2.0.0' // –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è
};

console.log('‚úÖ –û–∫–æ—à–∫–æ Mobile App v2.0 –∑–∞–≥—Ä—É–∂–µ–Ω–æ', window.OkoshkoMobileApp);